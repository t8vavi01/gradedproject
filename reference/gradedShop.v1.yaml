openapi: 3.0.0
info:
  title: gradedShop
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /registration:
    post:
      summary: ''
      operationId: post-registration
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorDescription:
                    type: string
              examples:
                example-1:
                  value:
                    '': string
      description: This endpoint is used to create an user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                birthDate:
                  type: string
                  description: ISO 8601
                eMail:
                  type: string
                  format: email
                userName:
                  type: string
                passWord:
                  type: string
                  format: password
              required:
                - fullName
                - birthDate
                - eMail
                - userName
                - passWord
            examples:
              example-1:
                value:
                  fullName: Name Namersson
                  birthDate: '2020-10-06'
                  eMail: example@examplemail.com
                  userName: NamNam
                  passWord: examplePassWord
  /posting:
    post:
      summary: ''
      operationId: post-posting
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      description: Create a new posting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                images:
                  type: object
                  properties:
                    imageOneURL:
                      type: string
                    imageTwoURL:
                      type: string
                    imageThreeURL:
                      type: string
                    imageFourURL:
                      type: string
                askingPrice:
                  type: number
                postDate:
                  type: string
                  description: ISO 8601
                location:
                  type: object
                  required:
                    - town
                    - country
                    - address
                    - zipCode
                  properties:
                    town:
                      type: string
                    country:
                      type: string
                    address:
                      type: string
                    zipCode:
                      type: string
                seller:
                  type: object
                  required:
                    - sellerName
                    - eMail
                    - phoneNumber
                  properties:
                    sellerName:
                      type: string
                    eMail:
                      type: string
                      format: email
                    phoneNumber:
                      type: string
                postingID:
                  type: integer
                pickUpDel:
                  type: boolean
                deliveryDel:
                  type: boolean
              required:
                - title
                - description
                - category
                - askingPrice
                - postDate
                - location
                - seller
                - pickUpDel
                - deliveryDel
            examples:
              example-1:
                value:
                  title: string
                  description: string
                  category: string
                  images:
                    imageOneURL: ''
                    imageTwoURL: ''
                    imageThreeURL: ''
                    imageFourURL: ''
                  askingPrice: 0
                  postDate: '2020-10-06'
                  location:
                    town: string
                    country: string
                    address: string
                    zipCode: string
                  deliveryType: string
                  seller:
                    sellerName: string
                    eMail: user@example.com
                    phoneNumber: string
    put:
      summary: ''
      operationId: put-posting
      responses:
        '200':
          description: Edits were made succesfully
        '400':
          description: Bad Request
      description: In this endpoint you can edit the information of your posting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                images:
                  type: object
                  properties:
                    imageOneURL:
                      type: string
                    imageTwoURL:
                      type: string
                    imageThreeURL:
                      type: string
                    imageFourURL:
                      type: string
                askingPrice:
                  type: number
                postDate:
                  type: string
                  description: ISO 8601
                location:
                  type: object
                  properties:
                    town:
                      type: string
                    country:
                      type: string
                    address:
                      type: string
                    zipCode:
                      type: string
                deliveryType:
                  type: string
                seller:
                  type: object
                  properties:
                    sellerName:
                      type: string
                    eMail:
                      type: string
                      format: email
                    phoneNumber:
                      type: string
                pickupDel:
                  type: boolean
                deliveryDel:
                  type: boolean
            examples:
              example-1:
                value:
                  title: string
                  description: string
                  category: string
                  images:
                    imageOne: {}
                    imageTwo: {}
                    imageThree: {}
                    imageFour: {}
                  askingPrice: 0
                  postDate: '2020-10-06'
                  location:
                    town: string
                    country: string
                    address: string
                    zipCode: string
                  deliveryType: string
                  seller:
                    sellerName: string
                    eMail: user@example.com
                    phoneNumber: string
  '/posting/{postingID}':
    delete:
      summary: ''
      operationId: delete-posting
      responses:
        '200':
          description: Succesfully deleted!
        '400':
          description: Bad Request
      description: Delete a posting
      security:
        - HTTPBasic: []
    parameters:
      - schema:
          type: string
        name: postingID
        in: path
        required: true
  '/posting/search/{category}':
    get:
      summary: Search by category
      tags: []
      responses:
        '200':
          description: Search ended succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  category:
                    type: string
                  images:
                    type: object
                    properties:
                      imageOneURL:
                        type: string
                      imageTwoURL:
                        type: string
                      imageThreeURL:
                        type: string
                      imageFourURL:
                        type: string
                  askingPrice:
                    type: number
                  postDate:
                    type: string
                  location:
                    type: object
                    properties:
                      town:
                        type: string
                      country:
                        type: string
                      address:
                        type: string
                      zipCode:
                        type: string
                  deliveryType:
                    type: string
                  seller:
                    type: object
                    properties:
                      sellerName:
                        type: string
                      eMail:
                        type: string
                        format: email
                      address:
                        type: string
                  pickupDel:
                    type: boolean
                  deliveryDel:
                    type: boolean
        '404':
          description: Your search result did not match any existing posting
      operationId: get-posting-search
      description: This endpoint is used to search postings by category
      parameters: []
    parameters:
      - schema:
          type: string
        name: category
        in: path
        required: true
  '/posting/search/{location}':
    get:
      summary: Search by location
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  category:
                    type: string
                  images:
                    type: object
                    properties:
                      imageOneURL:
                        type: string
                      imageTwoURL:
                        type: string
                      imageThreeURL:
                        type: string
                      imageFourURL:
                        type: string
                  askingPrice:
                    type: number
                  postDate:
                    type: string
                  location:
                    type: object
                    properties:
                      town:
                        type: string
                      country:
                        type: string
                      address:
                        type: string
                      zipCode:
                        type: string
                  seller:
                    type: object
                    properties:
                      sellerName:
                        type: string
                      eMail:
                        type: string
                        format: email
                      address:
                        type: string
                  pickupDel:
                    type: boolean
                  deliveryDel:
                    type: boolean
        '404':
          description: Not Found
      operationId: get-posting-search
      description: This endpoint is used to search by location
    parameters:
      - schema:
          type: string
        name: location
        in: path
        required: true
  '/posting/search/{postDate}':
    get:
      summary: Search by postdate
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  category:
                    type: string
                  images:
                    type: object
                    properties:
                      imageOneURL:
                        type: string
                      imageTwoURL:
                        type: string
                      imageThreeURL:
                        type: string
                      imageFourURL:
                        type: string
                  askingPrice:
                    type: number
                  postDate:
                    type: string
                  location:
                    type: object
                    properties:
                      town:
                        type: string
                      country:
                        type: string
                      address:
                        type: string
                      zipCode:
                        type: string
                  seller:
                    type: object
                    properties:
                      sellerName:
                        type: string
                      eMail:
                        type: string
                        format: email
                      address:
                        type: string
                  pickupDel:
                    type: boolean
                  deliveryDel:
                    type: boolean
        '404':
          description: Not Found
      operationId: get-posting-search
      description: This endpoint is used to search by posting date
    parameters:
      - schema:
          type: string
        name: postDate
        in: path
        required: true
components:
  schemas: {}
  securitySchemes:
    HTTPBasic:
      type: http
      scheme: basic
